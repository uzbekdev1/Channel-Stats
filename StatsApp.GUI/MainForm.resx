<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1aorBtSeK0fTmieV05wov9Kb
        KdnSmijz05sp89GbKNnSmyi/05onldSaKEfVqisGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1Z8rGNOcKZbTnCjx0pso/9Kb
        KP/Smyj/0pso/9KbKP/Smyj/0pso/9KbKP/Smyj/0pso/9OcKPHTnCmW1Z8rGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA27ZJB9SdKYLTnSn005wp/9Oc
        Kf/Tmyj/05wp/9ObKP/Tmyj/05so/9ObKP/Tmyj/05so/9ObKP/Tmyj/05so/9ObKP/TnCn01J0pgtu2
        SQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWfKxjVnCnH1Jwp/9Sc
        Kf/UnCn/1Jwp/9SdKf/UnCn/1J0p/9SdKf/UnCn/1J0p/9ScKf/UnCn/1J0p/9ScKf/UnSn/1J0p/9Sc
        Kf/UnSn/1Zwpx9WfKxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYoSwu1Z0r49Wd
        Kv/UnCn/1Z0q/9ScKf/UnCn/1Z0q/9ScKf/VnSr/1Z0q/9ScKf/VnSr/1Jwp/9ScKf/UnSn/1Jwp/9Sd
        Kf/UnSn/1Z0p/9SdKf/VnSn/1Z0q49efLS0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA358rGNee
        K+PVnSr/1Z0q/9aeKv/VnSr/1p4q/9aeKv/VnSr/1p4q/9WdKv/VnSr/1Z0q/9WdKv/VnSr/1Z0q/9ae
        Kv/VnSr/1p4q/9aeKv/VnSr/1p4q/9WdKv/VnSr/154r49+fKxgAAAAAAAAAAAAAAAAAAAAAAAAAANu2
        SQfXnyrH1p4r/9aeKv/Wnir/1p4q/9aeKv/Wnir/1p4q/9eeK//Wnir/154r/9eeK//Xnyv/154r/9ef
        K//Xnyv/1p4q/9efK//Wnir/1p4q/9aeK//Wnir/1p4r/9aeK//Wnir/158sx9u2SQcAAAAAAAAAAAAA
        AAAAAAAA2KErgtifK//Xnyv/2J8r/9ifK//Xnyv/2J8r/9efK//Xnyv/158r/9efK//Xnyv/158r/9ee
        K//Xnyv/154r/9eeK//Xnyv/154r/9efK//Xnyv/2J8r/9efK//Ynyv/2J8r/9eeK//Ynyv/2J8rggAA
        AAAAAAAAAAAAAN+fNRjYoCz02J8r/9ifK//Ynyv/2J8r/9efK//Ynyv/158r/9efK//Ynyz/158r/9if
        LP/Ynyz/2KAs/9ifLP/YoCz/2KAs/+bBd//58eD/+fDf/9uoPv/Ynyz/2J8r/9ifLP/Ynyz/2J8r/9if
        LP/YoCz03581GAAAAAAAAAAA2qIsltmgLP/ZoCz/2aAs/9mgLP/ZoCz/2KAs/9mgLP/YoCz/2KAs/9mg
        LP/YoCz/2aAs/9mgLP/ZoCz/2aAs/92rRv/048L/////////////////6cqJ/9mgLP/ZoCz/2aAs/9mg
        LP/YoCz/2aAs/9igLP/aoiyWAAAAAP+qVQbboi3x2qEt/9mgLP/aoS3/2aAs/9mgLP/aoS3/2aAs/9qh
        Lf/aoS3/2qEt/9qhLf/aoS3/2qEt/9mhLv/qyon//fr1///////////////////////y3rf/2aAs/9qh
        Lf/ZoCz/2aAs/9qhLf/ZoCz/2qEt/9uiLfH/qlUG26IvR9qhLf/aoS3/2qEt/9qhLf/aoS3/2qEt/9uh
        Lf/aoS3/26Et/9uhLf/aoS3/26Et/9qhLf/fr0z/9+vT//////////////////////////////////nx
        3//aoS3/26Iu/9qhLf/aoS3/2qEt/9qhLf/aoS3/2qEt/9uiL0fboy6V26Iu/9uiLv/coi7/26Iu/9yi
        Lv/coi7/26Iu/9yiLv/boi7/26Iu/9uiLv/boi7/26Iu//v27P//////////////////////////////
        /////////v79/9ylNv/boi3/26Iu/9uiLv/boS3/26Iu/9uhLf/boS3/26MuldyjL7/coy7/3KMu/9yi
        Lv/coy7/3KIu/9yiLv/coi7/3KIu/9yjMP/cpDP/26Iu/9yiLv/boi7/7M6S////////////////////
        ////////////////////////47Za/9yiLv/coy//3KMv/9yjLv/coy//3KMu/9yjLv/coy+/3qMv2d2j
        Lv/doy7/3aMv/92jLv/doy//47NT/+3Rlv/36tH//vz5//79/P/04bz/4bBM/92jL//doy//7MyM////
        ///////////////////////////////////qxn7/3KMu/92jL//doy//3KMu/92jL//coy7/3KMu/96j
        L9nepTDz3qQv/96kL//doy//3qQv/+jCdv/////////////////////////////////9+/f/7c6Q/96l
        Mv/epDD/6sd///7+/f////////////////////////////DXpP/epC//3qQw/96kMP/epC//3qQw/96k
        L//epC//3qQv8t6lMPPepDD/3qQw/9+lMP/epDD/36Yz/+vIgf/579v/////////////////////////
        ////////+O3X/+S2WP/fpTD/6cJ1//79+///////////////////////9ubG/96kMP/epC//3qQv/96k
        MP/epC//3qQw/96kMP/gpjDz36Yw2eClMf/gpTH/36Uw/+ClMf/fpTD/36Uw/9+lMP/mumL/9OC4//79
        +v///////////////////////v38//DWov/gqDj/6MBw//79+v/////////////////79ej/36Ux/+Cl
        Mf/gpTH/36Uw/+ClMf/fpTD/36Uw/9+mMNngpjC/4KYx/+CmMf/gpjH/4KYx/+CmMf/gpjH/4KYx/+Cm
        Mf/gpjH/4q5E/+7QlP/79Of///////////////////////v05v/pwHD/892z////////////////////
        ///hqTv/4KUw/+ClMP/gpjH/4KUw/+CmMf/gpjH/4qcxv+KmM5XhpjH/4aYx/+GmMf/hpjH/4aYx/+Gm
        Mf/hpjH/4aYx/+GmMf/hpjH/4acy/+GnM//qwXD/9ubF//7+/f//////////////////////////////
        /////////////+e4W//hpjL/4aYy/+GmMf/hpjL/4aYx/+GmMf/ipjKV4qkyR+GmMv/hpjL/4qcy/+Gm
        Mv/ipzL/4qcy/+GmMf/ipzL/4aYx/+GmMf/ipzL/4aYx/+KnMv/ipzL/5LFM//HVnf/89uv/////////
        ////////////////////////68V4/+KnMv/ipzL/4qcy/+KnMv/ipzL/4qcy/+KpMkf/qlUG46g08eOo
        M//ipzL/46gz/+KnMv/ipzL/46gz/+KnMv/jqDP/46gz/+KnMv/jqDP/4qcy/+KnMv/ipzL/4qcy/+Ko
        Nf/rwnP/9uXD//79/P/////////////////v0JH/4qcy/+KnMv/jqDP/4qcy/+OoM//jqDTx/6pVBgAA
        AADkqDOW46gz/+OoM//jqDP/46gz/+OoM//jqDP/46gz/+OoM//jqDP/5Kgz/+OoM//kqDP/5Kgz/+Sp
        M//kqDP/5Kkz/+SpM//jqDP/5rFH/+/PkP/47NP//vv3/+zFd//jqDP/46gz/+OoM//jqDP/46gz/+So
        M5YAAAAAAAAAAOqqNRjlqTT05ak0/+SpNP/lqTT/5ak0/+SpNP/lqTT/5Kk0/+SpNP/kqTP/5Kk0/+Sp
        M//kqTP/5Kgz/+SpM//kqDP/5Kgz/+SpNP/kqDP/5Kk0/+SpNP/lqTT/5Kk0/+WpNP/lqTT/5Kgz/+Wp
        NP/lqDP06qo1GAAAAAAAAAAAAAAAAOarNYLlqTT/5ak0/+WpNP/lqTT/5Kk0/+WpNP/kqTT/5Kk0/+Wp
        NP/kqTT/5ak0/+WpNP/lqjT/5ak0/+WqNP/lqjT/5ak0/+WqNP/lqTT/5ak0/+WpNP/lqTT/5ak0/+Wp
        NP/lqTT/5ak0/+arNYIAAAAAAAAAAAAAAAAAAAAA/7ZJB+eqNsfmqjX/5qo1/+aqNf/lqjT/5qo1/+Wq
        NP/lqjT/5qo0/+WqNP/mqjT/5qo0/+aqNf/mqjT/5qo1/+aqNf/mqjT/5qo1/+aqNP/mqjT/5qo1/+aq
        NP/mqjX/5qo1/+WqNP/nqjbH/7ZJBwAAAAAAAAAAAAAAAAAAAAAAAAAA6qo1GOesN+PmqjX/5qo1/+er
        Nf/mqjX/56s1/+erNf/nqzb/56s1/+erNv/nqzb/5qo1/+erNv/mqjX/5qo1/+erNf/mqjX/56s1/+er
        Nf/mqjX/56s1/+aqNf/mqjX/56w24+qqNRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6aw3Lues
        N+Pnqzb/6Ks2/+erNv/oqzb/6Ks2/+erNf/oqzb/56s1/+erNf/nqzb/56s1/+erNv/nqzb/6Kw2/+er
        Nv/orDb/6Kw2/+erNv/orDb/56s2/+esN+PosDktAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA6rVAGOmtN8forDb/6aw3/+isNv/orDb/6Kw2/+isNv/orDb/6Kw2/+isNv/orDb/6Kw2/+is
        Nv/orDb/6Kw2/+isNv/orDb/6Kw2/+isNv/prTfH6rVAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/7ZJB+mtN4LprDf06aw2/+msNv/orDb/6aw2/+isNv/orDb/6a03/+is
        Nv/prTf/6a03/+msN//prTf/6aw3/+msN//prTf06a05gv+2SQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPS1QBjrrziW66848eqtOP/qrjj/6q04/+qt
        OP/qrTf/6q04/+qtN//qrTf/6a03/+qtN//qrjfx6604lvS1QBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/1VUG7bA5R+yv
        OJXsrzi/66842euuOfPrrjnz66842eyvOL/srziV7bA5R//VVQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABwAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>